# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        newList=ListNode(None)
        temp=newList
        up=0

        while l1 or l2 :
            
            if not l2 and l1:
                num=l1.val+up
                up=num//10
                num=num%10
                node=ListNode(num)
                temp.next=node
                temp=node
                l1=l1.next

            elif not l1 and l2:
                num=l2.val+up
                up=num//10
                num=num%10
                node=ListNode(num)
                temp.next=node
                temp=node
                l2=l2.next

            else:
                num=l1.val+l2.val+up
                up=num//10
                num=num%10
                node=ListNode(num)
                temp.next=node
                temp=node
                l1=l1.next
                l2=l2.next
                
        if up==1:
            node=ListNode(1)
            temp.next=node
            temp=node
            
        
        return newList.next
        
        
